name: Build and deploy JAR app to Azure Web App - appService-server

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Grant execute permission to gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon  # 🔹 build 실행

      - name: List build/libs contents (확인용)
        run: ls -alh build/libs  # 🔹 JAR 생성 확인

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app  # 🔹 업로드 이름
          path: build/libs/builder-0.0.1-SNAPSHOT.jar  # 🔹 정확한 파일명 지정

      - name: Send Slack notification (Build Success)
        if: success()  # 빌드 성공 시 알림
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"GitHub Actions Build Success!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification (Build Failure)
        if: failure()  # 빌드 실패 시 알림
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"GitHub Actions Build Failed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app  # 🔹 업로드한 이름과 동일하게 설정

      - name: List downloaded artifacts (확인용)
        run: ls -alh  # 🔹 java-app 폴더가 생성되었는지 확인

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID  }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID  }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID  }}

      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'appService-server'
          slot-name: 'Production'
          package: builder-0.0.1-SNAPSHOT.jar  # 🔹 다운로드된 JAR 직접 지정
        env:
          PORT: 80

      - name: Send Slack notification (Deploy Success)
        if: success()  # 배포 성공 시 알림
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"GitHub Actions Deployment to Azure Web App Success!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Send Slack notification (Deploy Failure)
        if: failure()  # 배포 실패 시 알림
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"GitHub Actions Deployment to Azure Web App Failed!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
